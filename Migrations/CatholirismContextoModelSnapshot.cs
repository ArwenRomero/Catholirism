// <auto-generated />
using System;
using Catholirism.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catholirism.Migrations
{
    [DbContext(typeof(CatholirismContexto))]
    partial class CatholirismContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Catholirism.Model.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClienteEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClienteNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ClienteTelefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientela", (string)null);
                });

            modelBuilder.Entity("Catholirism.Model.Destino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImagemUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("Pacote_TuristicoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Pacote_TuristicoId");

                    b.ToTable("Locais", (string)null);
                });

            modelBuilder.Entity("Catholirism.Model.PacoteDestino", b =>
                {
                    b.Property<int>("PacoteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PacoteId", "DestinoId");

                    b.HasIndex("DestinoId");

                    b.ToTable("PacoteLocais", (string)null);
                });

            modelBuilder.Entity("Catholirism.Model.Pacote_Turistico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Preco")
                        .HasColumnType("TEXT");

                    b.Property<int>("ReservasAtuais")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PacotesTurismo", (string)null);
                });

            modelBuilder.Entity("Catholirism.Model.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("TEXT");

                    b.Property<int>("PacoteId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteId");

                    b.ToTable("Agendamentos", (string)null);
                });

            modelBuilder.Entity("Catholirism.Model.Destino", b =>
                {
                    b.HasOne("Catholirism.Model.Pacote_Turistico", null)
                        .WithMany("Destinos")
                        .HasForeignKey("Pacote_TuristicoId");
                });

            modelBuilder.Entity("Catholirism.Model.PacoteDestino", b =>
                {
                    b.HasOne("Catholirism.Model.Destino", "Destino")
                        .WithMany("PacoteDestinos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catholirism.Model.Pacote_Turistico", "Pacote")
                        .WithMany("PacoteDestinos")
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");

                    b.Navigation("Pacote");
                });

            modelBuilder.Entity("Catholirism.Model.Reserva", b =>
                {
                    b.HasOne("Catholirism.Model.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Catholirism.Model.Pacote_Turistico", "PacoteTuristico")
                        .WithMany()
                        .HasForeignKey("PacoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("Catholirism.Model.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Catholirism.Model.Destino", b =>
                {
                    b.Navigation("PacoteDestinos");
                });

            modelBuilder.Entity("Catholirism.Model.Pacote_Turistico", b =>
                {
                    b.Navigation("Destinos");

                    b.Navigation("PacoteDestinos");
                });
#pragma warning restore 612, 618
        }
    }
}
